"""
TradingView-–ø–æ–¥—ñ–±–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ —Å–≤—ñ—á–æ–∫ - –í–µ–±-–≤–µ—Ä—Å—ñ—è
–ê–≤—Ç–æ—Ä: AI Assistant
–î–∞—Ç–∞: 2024
"""

import os
import sys
from flask import Flask, render_template, jsonify, request
from flask_cors import CORS
from chart_display import create_chart_display

app = Flask(__name__)
CORS(app)

# –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –≥—Ä–∞—Ñ—ñ–∫–∞
chart = None

@app.route('/')
def index():
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑ –≥—Ä–∞—Ñ—ñ–∫–æ–º
    """
    return render_template('index.html')

@app.route('/api/chart')
def get_chart():
    """
    API endpoint –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≥—Ä–∞—Ñ—ñ–∫–∞
    """
    global chart
    
    try:
        if chart is None:
            data_path = "data/spot/1d/XRPUSDT.parquet"
            if not os.path.exists(data_path):
                return jsonify({'error': '–§–∞–π–ª –¥–∞–Ω–∏—Ö –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}), 404
            
            chart = create_chart_display(data_path)
        
        chart_json = chart.get_chart_json()
        return chart_json, 200, {'Content-Type': 'application/json'}
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/api/data')
def get_data_info():
    """
    API endpoint –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –¥–∞–Ω—ñ
    """
    global chart
    
    try:
        if chart is None:
            return jsonify({'error': '–î–∞–Ω—ñ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ'}), 400
        
        data_info = chart.get_data_info()
        return jsonify(data_info)
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/health')
def health_check():
    """
    –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤–µ—Ä–∞
    """
    return jsonify({'status': 'healthy', 'message': 'TradingView Chart Server is running'})

def main():
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    """
    global chart
    
    print("=== TradingView-–ø–æ–¥—ñ–±–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ —Å–≤—ñ—á–æ–∫ - –í–µ–±-–≤–µ—Ä—Å—ñ—è ===")
    
    # –®–ª—è—Ö –¥–æ –¥–∞–Ω–∏—Ö
    data_path = "data/spot/1d/XRPUSDT.parquet"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—É
    if not os.path.exists(data_path):
        print(f"–ü–æ–º–∏–ª–∫–∞: –§–∞–π–ª {data_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Ñ–∞–π–ª –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –ø–∞–ø—Ü—ñ.")
        return
    
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä–∞—Ñ—ñ–∫
        chart = create_chart_display(data_path)
        print("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –¥–∞–Ω—ñ
        data_info = chart.get_data_info()
        print(f"üìä –†–æ–∑–º—ñ—Ä –¥–∞–Ω–∏—Ö: {data_info['shape']}")
        print(f"üìÖ –ü–µ—Ä—ñ–æ–¥: {data_info['first_date']} - {data_info['last_date']}")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...")
        print("üì± –í—ñ–¥–∫—Ä–∏–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä —Ç–∞ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞: http://localhost:5002/")
        print("‚èπÔ∏è  –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")
        
        app.run(host='0.0.0.0', port=5002, debug=False)
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: {e}")

if __name__ == "__main__":
    main()
