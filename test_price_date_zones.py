#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–æ–Ω —Ü—ñ–Ω–∏ —Ç–∞ –¥–∞—Ç–∏
"""

import sys
import os
import re

def test_price_date_zones():
    """
    –¢–µ—Å—Ç—É—î–º–æ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–æ–Ω —Ü—ñ–Ω–∏ —Ç–∞ –¥–∞—Ç–∏ —ñ–Ω—à–∏–º –∫–æ–ª—å–æ—Ä–æ–º —Ç–∞ —Ä–∞–º–∫–æ—é
    """
    print("=== –¢–µ—Å—Ç –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–æ–Ω —Ü—ñ–Ω–∏ —Ç–∞ –¥–∞—Ç–∏ ===")
    
    try:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ CSS —Ñ–∞–π–ª
        css_file = "static/css/style.css"
        if os.path.exists(css_file):
            with open(css_file, 'r', encoding='utf-8') as f:
                css_content = f.read()
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å—Ç–∏–ª—ñ–≤ –¥–ª—è –∑–æ–Ω –æ—Å–µ–π
            zone_styles = [
                '#chart .plotly .xaxis',
                '#chart .plotly .yaxis',
                '#chart .plotly .xaxislayer',
                '#chart .plotly .yaxislayer'
            ]
            
            found_styles = []
            for style in zone_styles:
                if style in css_content:
                    found_styles.append(style)
                    print(f"‚úÖ CSS: –ó–Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∏–ª—å {style}")
                else:
                    print(f"‚ùå CSS: –°—Ç–∏–ª—å {style} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                    return False
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å border —Ç–∞ background
            if 'border: 3px solid #00d4aa' in css_content:
                print("‚úÖ CSS: –ó–Ω–∞–π–¥–µ–Ω–æ —Ä–∞–º–∫–∏ 3px solid #00d4aa")
            else:
                print("‚ùå CSS: –†–∞–º–∫–∏ 3px solid #00d4aa –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                return False
            
            if 'background: rgba(0, 212, 170, 0.08)' in css_content:
                print("‚úÖ CSS: –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ–æ–Ω rgba(0, 212, 170, 0.08)")
            else:
                print("‚ùå CSS: –§–æ–Ω rgba(0, 212, 170, 0.08) –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                return False
            
            print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–æ–Ω:")
            print(f"   ‚úÖ –ó–æ–Ω–∞ –¥–∞—Ç–∏ (X-–≤—ñ—Å—å): –†–∞–º–∫–∞ —Ç–∞ —Ñ–æ–Ω")
            print(f"   ‚úÖ –ó–æ–Ω–∞ —Ü—ñ–Ω–∏ (Y-–≤—ñ—Å—å): –†–∞–º–∫–∞ —Ç–∞ —Ñ–æ–Ω")
            print(f"   ‚úÖ –ö–æ–ª—å–æ—Ä–∏: #00d4aa (–∑–µ–ª–µ–Ω–∏–π)")
            print(f"   ‚úÖ –§–æ–Ω: rgba(0, 212, 170, 0.08)")
            print(f"   ‚úÖ –†–∞–º–∫–∏: 3px solid #00d4aa")
            
            return True
        else:
            print("‚ùå CSS —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
            return False
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_price_date_zones()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ! –ó–æ–Ω–∏ —Ü—ñ–Ω–∏ —Ç–∞ –¥–∞—Ç–∏ –≤–∏–¥—ñ–ª–µ–Ω—ñ.")
        print("üé® –ó–æ–Ω–∏ —Ç–µ–ø–µ—Ä –º–∞—é—Ç—å —Ä–∞–º–∫–∏ —Ç–∞ —Ñ–æ–Ω!")
    else:
        print("\n‚ö†Ô∏è –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π—à–æ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–¥.")
